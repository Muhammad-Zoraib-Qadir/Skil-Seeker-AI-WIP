{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zorai\\\\OneDrive\\\\Desktop\\\\skill-seeker\\\\frontend\\\\src\\\\pages\\\\QueryProcessing.js\",\n  _s = $RefreshSig$();\n// src/pages/QueryProcessing.js (simplified)\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Loading from '../components/Loading';\nimport { processQuery, submitAnswers } from '../services/queryService';\nimport '../styles/QueryProcessing.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueryProcessing = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    category,\n    query\n  } = location.state || {};\n  const [processId, setProcessId] = useState(null);\n  const [currentStep, setCurrentStep] = useState('loading');\n  const [synthesis, setSynthesis] = useState('');\n  const [followUpQuestions, setFollowUpQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [professionals, setProfessionals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const processUserQuery = async () => {\n      setLoading(true);\n      try {\n        // Clean up query\n        let queryText = typeof query === 'string' ? query : String(query || '');\n        queryText = queryText.replace(/\\s+/g, ' ').trim();\n        console.log('Processing query:', queryText);\n\n        // Start the process and get initial synthesis and questions\n        const response = await processQuery(category, queryText);\n        console.log('Raw API response:', response.data);\n        if (response.data.status === 'questions') {\n          setProcessId(response.data.processId);\n          setSynthesis(response.data.synthesis);\n\n          // Hard-code the questions from your screenshot for testing\n          const hardcodedQuestions = [\"Where exactly are you feeling ill? Please be as specific as possible (e.g., chest, stomach, head, etc.).\", \"What specific symptoms are you experiencing? (e.g., pain, fever, nausea, etc.)\", \"When did your symptoms start, and have they gotten progressively worse, stayed the same, or improved?\"];\n\n          // Try to use questions from response, fall back to hardcoded if needed\n          let questionsToUse = [];\n          if (Array.isArray(response.data.questions) && response.data.questions.length > 0) {\n            questionsToUse = response.data.questions;\n          } else if (typeof response.data.questions === 'string') {\n            try {\n              const parsed = JSON.parse(response.data.questions);\n              questionsToUse = Array.isArray(parsed) ? parsed : [response.data.questions];\n            } catch (e) {\n              questionsToUse = [response.data.questions];\n            }\n          } else {\n            // Fall back to hardcoded questions for debugging\n            questionsToUse = hardcodedQuestions;\n          }\n          console.log('Questions to display:', questionsToUse);\n          setFollowUpQuestions(questionsToUse);\n          setCurrentStep('questions');\n          setLoading(false);\n        } else {\n          setError('Unexpected response format');\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error('Error processing query:', err);\n        setError('Failed to process your query: ' + (err.message || 'Unknown error'));\n        setLoading(false);\n      }\n    };\n    if (category && query) {\n      processUserQuery();\n    } else {\n      setError('Missing required information. Please go back and try again.');\n      setLoading(false);\n    }\n  }, [category, query]);\n  const handleAnswerChange = (question, answer) => {\n    setAnswers({\n      ...answers,\n      [question]: answer\n    });\n  };\n  const handleSubmitAnswers = async () => {\n    if (!processId) {\n      setError('No active process found');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log('Submitting answers:', answers);\n      const response = await submitAnswers(processId, answers);\n      console.log('Submit response:', response.data);\n      if (response.data.status === 'results') {\n        setProfessionals(response.data.professionals);\n        setCurrentStep('results');\n        setLoading(false);\n      } else {\n        setError('Unexpected response format');\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error('Error submitting answers:', err);\n      setError('Failed to process answers: ' + (err.message || 'Unknown error'));\n      setLoading(false);\n    }\n  };\n  const handleViewResults = () => {\n    navigate('/results', {\n      state: {\n        professionals,\n        category,\n        query,\n        synthesis,\n        followUpQA: answers\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"query-processing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"processing-container\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/dashboard'),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : currentStep === 'loading' ? /*#__PURE__*/_jsxDEV(Loading, {\n        message: \"Analyzing your query...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : currentStep === 'questions' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Project Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"synthesis-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Our Understanding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: synthesis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"We need a few more details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px 0',\n            padding: '10px',\n            background: '#f0f9ff',\n            border: '1px solid #bae6fd'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Debug:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 18\n            }, this), \" Found \", followUpQuestions.length, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Questions Array Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 18\n            }, this), \" \", typeof followUpQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(followUpQuestions, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-container\",\n          style: {\n            margin: '20px 0'\n          },\n          children: [followUpQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-box\",\n            style: {\n              background: 'white',\n              padding: '15px',\n              marginBottom: '15px',\n              border: '2px solid #3b82f6',\n              borderRadius: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"question-text\",\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '10px'\n              },\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Your answer...\",\n              value: answers[question] || '',\n              onChange: e => handleAnswerChange(question, e.target.value),\n              style: {\n                width: '100%',\n                padding: '10px',\n                borderRadius: '4px',\n                border: '1px solid #d1d5db'\n              },\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitAnswers,\n            disabled: Object.keys(answers).length < followUpQuestions.length || loading,\n            className: \"submit-answers-button\",\n            style: {\n              background: '#3b82f6',\n              color: 'white',\n              padding: '10px 20px',\n              borderRadius: '4px',\n              border: 'none',\n              cursor: 'pointer',\n              fontWeight: 'bold',\n              marginTop: '15px'\n            },\n            children: loading ? 'Processing...' : 'Find Matching Professionals'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : currentStep === 'results' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-found\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Matching Professionals Found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We've identified the best professionals for your needs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleViewResults,\n          className: \"view-results-button\",\n          children: \"View Recommended Professionals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), (currentStep === 'loading' || loading) && /*#__PURE__*/_jsxDEV(Loading, {\n      message: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryProcessing, \"EjNPtT12kN2ne8ugyLE0JIvC5jk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QueryProcessing;\nexport default QueryProcessing;\nvar _c;\n$RefreshReg$(_c, \"QueryProcessing\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Header","Footer","Loading","processQuery","submitAnswers","jsxDEV","_jsxDEV","Fragment","_Fragment","QueryProcessing","_s","location","navigate","category","query","state","processId","setProcessId","currentStep","setCurrentStep","synthesis","setSynthesis","followUpQuestions","setFollowUpQuestions","answers","setAnswers","professionals","setProfessionals","loading","setLoading","error","setError","processUserQuery","queryText","String","replace","trim","console","log","response","data","status","hardcodedQuestions","questionsToUse","Array","isArray","questions","length","parsed","JSON","parse","e","err","message","handleAnswerChange","question","answer","handleSubmitAnswers","handleViewResults","followUpQA","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","margin","padding","background","border","stringify","map","index","marginBottom","borderRadius","fontWeight","placeholder","value","onChange","target","width","rows","disabled","Object","keys","color","cursor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/zorai/OneDrive/Desktop/skill-seeker/frontend/src/pages/QueryProcessing.js"],"sourcesContent":["// src/pages/QueryProcessing.js (simplified)\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Loading from '../components/Loading';\r\nimport { processQuery, submitAnswers } from '../services/queryService';\r\nimport '../styles/QueryProcessing.css';\r\n\r\nconst QueryProcessing = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { category, query } = location.state || {};\r\n  \r\n  const [processId, setProcessId] = useState(null);\r\n  const [currentStep, setCurrentStep] = useState('loading');\r\n  const [synthesis, setSynthesis] = useState('');\r\n  const [followUpQuestions, setFollowUpQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [professionals, setProfessionals] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const processUserQuery = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Clean up query\r\n        let queryText = typeof query === 'string' ? query : String(query || '');\r\n        queryText = queryText.replace(/\\s+/g, ' ').trim();\r\n        \r\n        console.log('Processing query:', queryText);\r\n        \r\n        // Start the process and get initial synthesis and questions\r\n        const response = await processQuery(category, queryText);\r\n        \r\n        console.log('Raw API response:', response.data);\r\n        \r\n        if (response.data.status === 'questions') {\r\n          setProcessId(response.data.processId);\r\n          setSynthesis(response.data.synthesis);\r\n          \r\n          // Hard-code the questions from your screenshot for testing\r\n          const hardcodedQuestions = [\r\n            \"Where exactly are you feeling ill? Please be as specific as possible (e.g., chest, stomach, head, etc.).\",\r\n            \"What specific symptoms are you experiencing? (e.g., pain, fever, nausea, etc.)\",\r\n            \"When did your symptoms start, and have they gotten progressively worse, stayed the same, or improved?\"\r\n          ];\r\n          \r\n          // Try to use questions from response, fall back to hardcoded if needed\r\n          let questionsToUse = [];\r\n          \r\n          if (Array.isArray(response.data.questions) && response.data.questions.length > 0) {\r\n            questionsToUse = response.data.questions;\r\n          } else if (typeof response.data.questions === 'string') {\r\n            try {\r\n              const parsed = JSON.parse(response.data.questions);\r\n              questionsToUse = Array.isArray(parsed) ? parsed : [response.data.questions];\r\n            } catch (e) {\r\n              questionsToUse = [response.data.questions];\r\n            }\r\n          } else {\r\n            // Fall back to hardcoded questions for debugging\r\n            questionsToUse = hardcodedQuestions;\r\n          }\r\n          \r\n          console.log('Questions to display:', questionsToUse);\r\n          setFollowUpQuestions(questionsToUse);\r\n          setCurrentStep('questions');\r\n          setLoading(false);\r\n        } else {\r\n          setError('Unexpected response format');\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error processing query:', err);\r\n        setError('Failed to process your query: ' + (err.message || 'Unknown error'));\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (category && query) {\r\n      processUserQuery();\r\n    } else {\r\n      setError('Missing required information. Please go back and try again.');\r\n      setLoading(false);\r\n    }\r\n  }, [category, query]);\r\n  \r\n  const handleAnswerChange = (question, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [question]: answer\r\n    });\r\n  };\r\n  \r\n  const handleSubmitAnswers = async () => {\r\n    if (!processId) {\r\n      setError('No active process found');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      console.log('Submitting answers:', answers);\r\n      const response = await submitAnswers(processId, answers);\r\n      \r\n      console.log('Submit response:', response.data);\r\n      \r\n      if (response.data.status === 'results') {\r\n        setProfessionals(response.data.professionals);\r\n        setCurrentStep('results');\r\n        setLoading(false);\r\n      } else {\r\n        setError('Unexpected response format');\r\n        setLoading(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting answers:', err);\r\n      setError('Failed to process answers: ' + (err.message || 'Unknown error'));\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleViewResults = () => {\r\n    navigate('/results', { \r\n      state: { professionals, category, query, synthesis, followUpQA: answers } \r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"query-processing-page\">\r\n      <Header />\r\n      \r\n      <main className=\"processing-container\">\r\n        {error ? (\r\n          <div className=\"error-container\">\r\n            <h2>Error</h2>\r\n            <p>{error}</p>\r\n            <button onClick={() => navigate('/dashboard')}>\r\n              Back to Dashboard\r\n            </button>\r\n          </div>\r\n        ) : currentStep === 'loading' ? (\r\n          <Loading message=\"Analyzing your query...\" />\r\n        ) : currentStep === 'questions' ? (\r\n          <>\r\n            <h2>Project Analysis</h2>\r\n            <div className=\"synthesis-box\">\r\n              <h3>Our Understanding</h3>\r\n              <p>{synthesis}</p>\r\n            </div>\r\n            \r\n            <h3>We need a few more details</h3>\r\n            \r\n            {/* Debug info */}\r\n            <div style={{margin: '10px 0', padding: '10px', background: '#f0f9ff', border: '1px solid #bae6fd'}}>\r\n              <p><strong>Debug:</strong> Found {followUpQuestions.length} questions</p>\r\n              <p><strong>Questions Array Type:</strong> {typeof followUpQuestions}</p>\r\n              <pre>{JSON.stringify(followUpQuestions, null, 2)}</pre>\r\n            </div>\r\n            \r\n            <div className=\"questions-container\" style={{margin: '20px 0'}}>\r\n              {followUpQuestions.map((question, index) => (\r\n                <div \r\n                  key={index} \r\n                  className=\"question-box\"\r\n                  style={{\r\n                    background: 'white',\r\n                    padding: '15px',\r\n                    marginBottom: '15px',\r\n                    border: '2px solid #3b82f6',\r\n                    borderRadius: '8px'\r\n                  }}\r\n                >\r\n                  <p className=\"question-text\" style={{fontWeight: 'bold', marginBottom: '10px'}}>{question}</p>\r\n                  <textarea\r\n                    placeholder=\"Your answer...\"\r\n                    value={answers[question] || ''}\r\n                    onChange={(e) => handleAnswerChange(question, e.target.value)}\r\n                    style={{\r\n                      width: '100%',\r\n                      padding: '10px',\r\n                      borderRadius: '4px',\r\n                      border: '1px solid #d1d5db'\r\n                    }}\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n              ))}\r\n              \r\n              <button \r\n                onClick={handleSubmitAnswers}\r\n                disabled={Object.keys(answers).length < followUpQuestions.length || loading}\r\n                className=\"submit-answers-button\"\r\n                style={{\r\n                  background: '#3b82f6',\r\n                  color: 'white',\r\n                  padding: '10px 20px',\r\n                  borderRadius: '4px',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  fontWeight: 'bold',\r\n                  marginTop: '15px'\r\n                }}\r\n              >\r\n                {loading ? 'Processing...' : 'Find Matching Professionals'}\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : currentStep === 'results' ? (\r\n          <div className=\"results-found\">\r\n            <h2>Matching Professionals Found!</h2>\r\n            <p>We've identified the best professionals for your needs.</p>\r\n            <button onClick={handleViewResults} className=\"view-results-button\">\r\n              View Recommended Professionals\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </main>\r\n      \r\n      <Footer />\r\n      \r\n      {(currentStep === 'loading' || loading) && <Loading message=\"Processing...\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryProcessing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}