{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zorai\\\\OneDrive\\\\Desktop\\\\skill-seeker\\\\frontend\\\\src\\\\pages\\\\QueryProcessing.js\",\n  _s = $RefreshSig$();\n// src/pages/QueryProcessing.js (reliable version)\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Loading from '../components/Loading';\nimport { processQuery, submitAnswers } from '../services/queryService';\nimport '../styles/QueryProcessing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryProcessing = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    category,\n    query\n  } = location.state || {};\n  const [processId, setProcessId] = useState(null);\n  const [currentStep, setCurrentStep] = useState('loading');\n  const [synthesis, setSynthesis] = useState('');\n  const [followUpQuestions, setFollowUpQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [professionals, setProfessionals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const processUserQuery = async () => {\n      setLoading(true);\n      try {\n        // Clean up query\n        let queryText = typeof query === 'string' ? query : String(query || '');\n        console.log('Processing query:', queryText);\n\n        // Start the process and get initial synthesis and questions\n        const response = await processQuery(category, queryText);\n        console.log('Full API response:', response.data);\n        if (response.data.status === 'questions') {\n          setProcessId(response.data.processId);\n          setSynthesis(response.data.synthesis);\n\n          // Extract questions - ensure it's always an array\n          let questions = [];\n          if (Array.isArray(response.data.questions)) {\n            console.log('Questions is already an array');\n            questions = [...response.data.questions];\n          } else if (typeof response.data.questions === 'string') {\n            console.log('Questions is a string, trying to parse as JSON');\n            try {\n              const parsed = JSON.parse(response.data.questions);\n              if (Array.isArray(parsed)) {\n                questions = parsed;\n              } else {\n                questions = [response.data.questions];\n              }\n            } catch (e) {\n              console.log('Failed to parse questions as JSON, using as single question');\n              questions = [response.data.questions];\n            }\n          } else if (response.data.questions && typeof response.data.questions === 'object') {\n            console.log('Questions is an object, extracting values');\n            questions = Object.values(response.data.questions);\n          }\n          console.log('Final questions array:', questions);\n\n          // Create a separate copy of the array to avoid reference issues\n          const questionsCopy = [...questions];\n          console.log('Setting questions state with:', questionsCopy);\n          setFollowUpQuestions(questionsCopy);\n          setCurrentStep('questions');\n          setLoading(false);\n\n          // Log the state update\n          setTimeout(() => {\n            console.log('Current followUpQuestions state:', followUpQuestions);\n          }, 100);\n        } else {\n          setError('Unexpected response format');\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error('Error processing query:', err);\n        setError('Failed to process your query: ' + (err.message || 'Unknown error'));\n        setLoading(false);\n      }\n    };\n    if (category && query) {\n      processUserQuery();\n    } else {\n      setError('Missing required information. Please go back and try again.');\n      setLoading(false);\n    }\n  }, [category, query]);\n\n  // Effect to log when followUpQuestions changes\n  useEffect(() => {\n    console.log('followUpQuestions updated:', followUpQuestions);\n  }, [followUpQuestions]);\n  const handleAnswerChange = (question, answer) => {\n    setAnswers({\n      ...answers,\n      [question]: answer\n    });\n  };\n  const handleSubmitAnswers = async () => {\n    if (!processId) {\n      setError('No active process found');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log('Submitting answers:', answers);\n      const response = await submitAnswers(processId, answers);\n      console.log('Submit response:', response.data);\n      if (response.data.status === 'results') {\n        setProfessionals(response.data.professionals);\n        setCurrentStep('results');\n        setLoading(false);\n      } else {\n        setError('Unexpected response format');\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error('Error submitting answers:', err);\n      setError('Failed to process answers: ' + (err.message || 'Unknown error'));\n      setLoading(false);\n    }\n  };\n  const handleViewResults = () => {\n    navigate('/results', {\n      state: {\n        professionals,\n        category,\n        query,\n        synthesis,\n        followUpQA: answers\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"query-processing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"processing-container\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/dashboard'),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : currentStep === 'loading' ? /*#__PURE__*/_jsxDEV(Loading, {\n        message: \"Analyzing your query...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : currentStep === 'questions' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Project Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"synthesis-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Our Understanding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: synthesis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"We need a few more details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px 0',\n            padding: '10px',\n            background: '#f0f9ff',\n            border: '1px solid #bae6fd'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Debug:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 18\n            }, this), \" Found \", followUpQuestions.length, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), followUpQuestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-container\",\n          children: [followUpQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"question-text\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Your answer...\",\n              value: answers[question] || '',\n              onChange: e => handleAnswerChange(question, e.target.value),\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitAnswers,\n            disabled: Object.keys(answers).length < followUpQuestions.length || loading,\n            className: \"submit-answers-button\",\n            children: loading ? 'Processing...' : 'Find Matching Professionals'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions available. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/dashboard'),\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : currentStep === 'results' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-found\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Matching Professionals Found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We've identified the best professionals for your needs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleViewResults,\n          className: \"view-results-button\",\n          children: \"View Recommended Professionals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), (currentStep === 'loading' || loading) && /*#__PURE__*/_jsxDEV(Loading, {\n      message: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryProcessing, \"oZfk7CAsImwIDzxhmwmCcPzr9xc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QueryProcessing;\nexport default QueryProcessing;\nvar _c;\n$RefreshReg$(_c, \"QueryProcessing\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Header","Footer","Loading","processQuery","submitAnswers","jsxDEV","_jsxDEV","QueryProcessing","_s","location","navigate","category","query","state","processId","setProcessId","currentStep","setCurrentStep","synthesis","setSynthesis","followUpQuestions","setFollowUpQuestions","answers","setAnswers","professionals","setProfessionals","loading","setLoading","error","setError","processUserQuery","queryText","String","console","log","response","data","status","questions","Array","isArray","parsed","JSON","parse","e","Object","values","questionsCopy","setTimeout","err","message","handleAnswerChange","question","answer","handleSubmitAnswers","handleViewResults","followUpQA","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","margin","padding","background","border","length","map","index","placeholder","value","onChange","target","rows","disabled","keys","_c","$RefreshReg$"],"sources":["C:/Users/zorai/OneDrive/Desktop/skill-seeker/frontend/src/pages/QueryProcessing.js"],"sourcesContent":["// src/pages/QueryProcessing.js (reliable version)\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Loading from '../components/Loading';\r\nimport { processQuery, submitAnswers } from '../services/queryService';\r\nimport '../styles/QueryProcessing.css';\r\n\r\nconst QueryProcessing = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { category, query } = location.state || {};\r\n  \r\n  const [processId, setProcessId] = useState(null);\r\n  const [currentStep, setCurrentStep] = useState('loading');\r\n  const [synthesis, setSynthesis] = useState('');\r\n  const [followUpQuestions, setFollowUpQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [professionals, setProfessionals] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const processUserQuery = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Clean up query\r\n        let queryText = typeof query === 'string' ? query : String(query || '');\r\n        \r\n        console.log('Processing query:', queryText);\r\n        \r\n        // Start the process and get initial synthesis and questions\r\n        const response = await processQuery(category, queryText);\r\n        \r\n        console.log('Full API response:', response.data);\r\n        \r\n        if (response.data.status === 'questions') {\r\n          setProcessId(response.data.processId);\r\n          setSynthesis(response.data.synthesis);\r\n          \r\n          // Extract questions - ensure it's always an array\r\n          let questions = [];\r\n          \r\n          if (Array.isArray(response.data.questions)) {\r\n            console.log('Questions is already an array');\r\n            questions = [...response.data.questions];\r\n          } else if (typeof response.data.questions === 'string') {\r\n            console.log('Questions is a string, trying to parse as JSON');\r\n            try {\r\n              const parsed = JSON.parse(response.data.questions);\r\n              if (Array.isArray(parsed)) {\r\n                questions = parsed;\r\n              } else {\r\n                questions = [response.data.questions];\r\n              }\r\n            } catch (e) {\r\n              console.log('Failed to parse questions as JSON, using as single question');\r\n              questions = [response.data.questions];\r\n            }\r\n          } else if (response.data.questions && typeof response.data.questions === 'object') {\r\n            console.log('Questions is an object, extracting values');\r\n            questions = Object.values(response.data.questions);\r\n          }\r\n          \r\n          console.log('Final questions array:', questions);\r\n          \r\n          // Create a separate copy of the array to avoid reference issues\r\n          const questionsCopy = [...questions];\r\n          console.log('Setting questions state with:', questionsCopy);\r\n          \r\n          setFollowUpQuestions(questionsCopy);\r\n          setCurrentStep('questions');\r\n          setLoading(false);\r\n          \r\n          // Log the state update\r\n          setTimeout(() => {\r\n            console.log('Current followUpQuestions state:', followUpQuestions);\r\n          }, 100);\r\n        } else {\r\n          setError('Unexpected response format');\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error processing query:', err);\r\n        setError('Failed to process your query: ' + (err.message || 'Unknown error'));\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (category && query) {\r\n      processUserQuery();\r\n    } else {\r\n      setError('Missing required information. Please go back and try again.');\r\n      setLoading(false);\r\n    }\r\n  }, [category, query]);\r\n  \r\n  // Effect to log when followUpQuestions changes\r\n  useEffect(() => {\r\n    console.log('followUpQuestions updated:', followUpQuestions);\r\n  }, [followUpQuestions]);\r\n  \r\n  const handleAnswerChange = (question, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [question]: answer\r\n    });\r\n  };\r\n  \r\n  const handleSubmitAnswers = async () => {\r\n    if (!processId) {\r\n      setError('No active process found');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      console.log('Submitting answers:', answers);\r\n      const response = await submitAnswers(processId, answers);\r\n      \r\n      console.log('Submit response:', response.data);\r\n      \r\n      if (response.data.status === 'results') {\r\n        setProfessionals(response.data.professionals);\r\n        setCurrentStep('results');\r\n        setLoading(false);\r\n      } else {\r\n        setError('Unexpected response format');\r\n        setLoading(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting answers:', err);\r\n      setError('Failed to process answers: ' + (err.message || 'Unknown error'));\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleViewResults = () => {\r\n    navigate('/results', { \r\n      state: { professionals, category, query, synthesis, followUpQA: answers } \r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"query-processing-page\">\r\n      <Header />\r\n      \r\n      <main className=\"processing-container\">\r\n        {error ? (\r\n          <div className=\"error-container\">\r\n            <h2>Error</h2>\r\n            <p>{error}</p>\r\n            <button onClick={() => navigate('/dashboard')}>\r\n              Back to Dashboard\r\n            </button>\r\n          </div>\r\n        ) : currentStep === 'loading' ? (\r\n          <Loading message=\"Analyzing your query...\" />\r\n        ) : currentStep === 'questions' ? (\r\n          <div className=\"questions-section\">\r\n            <h2>Project Analysis</h2>\r\n            <div className=\"synthesis-box\">\r\n              <h3>Our Understanding</h3>\r\n              <p>{synthesis}</p>\r\n            </div>\r\n            \r\n            <h3>We need a few more details</h3>\r\n            \r\n            {/* Debug info - keep for troubleshooting */}\r\n            <div style={{margin: '10px 0', padding: '10px', background: '#f0f9ff', border: '1px solid #bae6fd'}}>\r\n              <p><strong>Debug:</strong> Found {followUpQuestions.length} questions</p>\r\n            </div>\r\n            \r\n            {followUpQuestions.length > 0 ? (\r\n              <div className=\"questions-container\">\r\n                {followUpQuestions.map((question, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className=\"question-box\"\r\n                  >\r\n                    <p className=\"question-text\">{question}</p>\r\n                    <textarea\r\n                      placeholder=\"Your answer...\"\r\n                      value={answers[question] || ''}\r\n                      onChange={(e) => handleAnswerChange(question, e.target.value)}\r\n                      rows={3}\r\n                    />\r\n                  </div>\r\n                ))}\r\n                \r\n                <button \r\n                  onClick={handleSubmitAnswers}\r\n                  disabled={Object.keys(answers).length < followUpQuestions.length || loading}\r\n                  className=\"submit-answers-button\"\r\n                >\r\n                  {loading ? 'Processing...' : 'Find Matching Professionals'}\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"no-questions\">\r\n                <p>No questions available. Please try again.</p>\r\n                <button onClick={() => navigate('/dashboard')}>Back to Dashboard</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : currentStep === 'results' ? (\r\n          <div className=\"results-found\">\r\n            <h2>Matching Professionals Found!</h2>\r\n            <p>We've identified the best professionals for your needs.</p>\r\n            <button onClick={handleViewResults} className=\"view-results-button\">\r\n              View Recommended Professionals\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </main>\r\n      \r\n      <Footer />\r\n      \r\n      {(currentStep === 'loading' || loading) && <Loading message=\"Processing...\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryProcessing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}