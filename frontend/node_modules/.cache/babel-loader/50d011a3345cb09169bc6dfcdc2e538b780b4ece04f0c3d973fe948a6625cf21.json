{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zorai\\\\OneDrive\\\\Desktop\\\\skill-seeker\\\\frontend\\\\src\\\\pages\\\\QueryProcessing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Loading from '../components/Loading';\nimport { processQuery, submitAnswers } from '../services/queryService';\nimport '../styles/QueryProcessing.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueryProcessing = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    category,\n    query,\n    userLocation\n  } = location.state || {};\n  const [processId, setProcessId] = useState(null);\n  const [currentStep, setCurrentStep] = useState('loading');\n  const [synthesis, setSynthesis] = useState('');\n  const [followUpQuestions, setFollowUpQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [professionals, setProfessionals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [originalQuery, setOriginalQuery] = useState('');\n  useEffect(() => {\n    // Inside useEffect in QueryProcessing.js\n    const processUserQuery = async () => {\n      setLoading(true);\n      try {\n        // Clean up query and ensure proper formatting\n        let queryText = typeof query === 'string' ? query.trim() : String(query || '').trim();\n\n        // Store the original query for display purposes\n        setOriginalQuery(queryText);\n        console.log(location);\n        // Get stored location from localStorage if not provided in state\n        let userLocationValue = userLocation;\n        if (!userLocationValue) {\n          userLocationValue = localStorage.getItem('userLocation');\n        }\n\n        // If location is available, ensure it's in the correct format\n        if (userLocationValue) {\n          // First remove any location information that might already be in the query\n          // Both \"in [location]\" or \"and my location is in [location]\" patterns\n          queryText = queryText.replace(/\\s+in\\s+([A-Za-z\\s]+)$/i, '').replace(/\\s+and my location is in\\s+([A-Za-z\\s]+)$/i, '').trim();\n\n          // Always format with the expected pattern for API\n          const formattedQueryForAPI = `${queryText} and my location is in ${userLocationValue}`;\n          console.log(\"Sending query with formatted location:\", formattedQueryForAPI);\n\n          // Start the process and get initial synthesis and questions\n          const response = await processQuery(category, formattedQueryForAPI);\n\n          // Rest of the processing logic...\n          if (response.data.status === 'questions') {\n            setProcessId(response.data.processId);\n            setSynthesis(response.data.synthesis);\n\n            // Extract questions - ensure it's always an array\n            let questions = [];\n            if (Array.isArray(response.data.questions)) {\n              questions = [...response.data.questions];\n            } else if (typeof response.data.questions === 'string') {\n              try {\n                const parsed = JSON.parse(response.data.questions);\n                if (Array.isArray(parsed)) {\n                  questions = parsed;\n                } else {\n                  questions = [response.data.questions];\n                }\n              } catch (e) {\n                questions = [response.data.questions];\n              }\n            } else if (response.data.questions && typeof response.data.questions === 'object') {\n              questions = Object.values(response.data.questions);\n            }\n\n            // Create a separate copy of the array to avoid reference issues\n            const questionsCopy = [...questions];\n            setFollowUpQuestions(questionsCopy);\n            setCurrentStep('questions');\n            setLoading(false);\n          } else {\n            setError('Unexpected response format');\n            setLoading(false);\n          }\n        } else {\n          // Handle case where location is not available\n          console.log(\"Sending query without location:\", queryText);\n          const response = await processQuery(category, queryText);\n\n          // Handle response same as above\n          if (response.data.status === 'questions') {\n            setProcessId(response.data.processId);\n            setSynthesis(response.data.synthesis);\n            let questions = [];\n            if (Array.isArray(response.data.questions)) {\n              questions = [...response.data.questions];\n            } else if (typeof response.data.questions === 'string') {\n              try {\n                const parsed = JSON.parse(response.data.questions);\n                if (Array.isArray(parsed)) {\n                  questions = parsed;\n                } else {\n                  questions = [response.data.questions];\n                }\n              } catch (e) {\n                questions = [response.data.questions];\n              }\n            } else if (response.data.questions && typeof response.data.questions === 'object') {\n              questions = Object.values(response.data.questions);\n            }\n            const questionsCopy = [...questions];\n            setFollowUpQuestions(questionsCopy);\n            setCurrentStep('questions');\n            setLoading(false);\n          } else {\n            setError('Unexpected response format');\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.error('Error processing query:', err);\n        setError('Failed to process your query: ' + (err.message || 'Unknown error'));\n        setLoading(false);\n      }\n    };\n    if (category && query) {\n      processUserQuery();\n    } else {\n      setError('Missing required information. Please go back and try again.');\n      setLoading(false);\n    }\n  }, [category, query, userLocation, location]);\n  const handleAnswerChange = (question, answer) => {\n    setAnswers({\n      ...answers,\n      [question]: answer\n    });\n  };\n  const handleSubmitAnswers = async () => {\n    if (!processId) {\n      setError('No active process found');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await submitAnswers(processId, answers);\n      if (response.data.status === 'results') {\n        setProfessionals(response.data.professionals);\n        setCurrentStep('results');\n        setLoading(false);\n      } else {\n        setError('Unexpected response format');\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error('Error submitting answers:', err);\n      setError('Failed to process answers: ' + (err.message || 'Unknown error'));\n      setLoading(false);\n    }\n  };\n  const handleViewResults = () => {\n    // Get the stored location if it wasn't provided in state\n    let userLocationValue = userLocation;\n    if (!userLocationValue) {\n      userLocationValue = localStorage.getItem('userLocation');\n    }\n\n    // Make sure to include location in the state when navigating to results\n    // Pass the original query without the appended location string\n    navigate('/results', {\n      state: {\n        professionals,\n        category,\n        query: originalQuery,\n        // Use the original query for display \n        synthesis,\n        followUpQA: answers,\n        userLocation: userLocationValue\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"query-processing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"processing-container\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/dashboard'),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this) : currentStep === 'loading' ? /*#__PURE__*/_jsxDEV(Loading, {\n        message: \"Analyzing your query...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this) : currentStep === 'questions' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fade-in\",\n          children: \"Project Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"synthesis-box slide-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Our Understanding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: synthesis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"query-display slide-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Query:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 18\n            }, this), \" \", originalQuery]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), userLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 35\n            }, this), \" \", userLocation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"fade-in-delayed\",\n          children: \"We need a few more details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), followUpQuestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-container\",\n          children: [followUpQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `question-box slide-in-question question-${index}`,\n            style: {\n              animationDelay: `${index * 0.1}s`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"question-text\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Your answer...\",\n              value: answers[question] || '',\n              onChange: e => handleAnswerChange(question, e.target.value),\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitAnswers,\n            disabled: Object.keys(answers).length < followUpQuestions.length || loading,\n            className: \"submit-answers-button fade-in-delayed\",\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this), \"Processing...\"]\n            }, void 0, true) : 'Find Matching Professionals'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions available. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/dashboard'),\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this) : currentStep === 'results' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-found pulse-animation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Matching Professionals Found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We've identified the best professionals for your needs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleViewResults,\n          className: \"view-results-button\",\n          children: \"View Recommended Professionals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), (currentStep === 'loading' || loading) && /*#__PURE__*/_jsxDEV(Loading, {\n      message: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryProcessing, \"YRhuKuROOwfbamJCNpENf0f7mHs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QueryProcessing;\nexport default QueryProcessing;\nvar _c;\n$RefreshReg$(_c, \"QueryProcessing\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Header","Footer","Loading","processQuery","submitAnswers","jsxDEV","_jsxDEV","Fragment","_Fragment","QueryProcessing","_s","location","navigate","category","query","userLocation","state","processId","setProcessId","currentStep","setCurrentStep","synthesis","setSynthesis","followUpQuestions","setFollowUpQuestions","answers","setAnswers","professionals","setProfessionals","loading","setLoading","error","setError","originalQuery","setOriginalQuery","processUserQuery","queryText","trim","String","console","log","userLocationValue","localStorage","getItem","replace","formattedQueryForAPI","response","data","status","questions","Array","isArray","parsed","JSON","parse","e","Object","values","questionsCopy","err","message","handleAnswerChange","question","answer","handleSubmitAnswers","handleViewResults","followUpQA","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","index","style","animationDelay","placeholder","value","onChange","target","rows","disabled","keys","_c","$RefreshReg$"],"sources":["C:/Users/zorai/OneDrive/Desktop/skill-seeker/frontend/src/pages/QueryProcessing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Loading from '../components/Loading';\r\nimport { processQuery, submitAnswers } from '../services/queryService';\r\nimport '../styles/QueryProcessing.css';\r\n\r\nconst QueryProcessing = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { category, query, userLocation } = location.state || {};\r\n  \r\n  const [processId, setProcessId] = useState(null);\r\n  const [currentStep, setCurrentStep] = useState('loading');\r\n  const [synthesis, setSynthesis] = useState('');\r\n  const [followUpQuestions, setFollowUpQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [professionals, setProfessionals] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [originalQuery, setOriginalQuery] = useState('');\r\n  \r\n  useEffect(() => {\r\n    // Inside useEffect in QueryProcessing.js\r\n    const processUserQuery = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Clean up query and ensure proper formatting\r\n        let queryText = typeof query === 'string' ? query.trim() : String(query || '').trim();\r\n        \r\n        // Store the original query for display purposes\r\n        setOriginalQuery(queryText);\r\n        \r\n        console.log(location);\r\n        // Get stored location from localStorage if not provided in state\r\n        let userLocationValue = userLocation;\r\n        if (!userLocationValue) {\r\n          userLocationValue = localStorage.getItem('userLocation');\r\n        }\r\n        \r\n        // If location is available, ensure it's in the correct format\r\n        if (userLocationValue) {\r\n          // First remove any location information that might already be in the query\r\n          // Both \"in [location]\" or \"and my location is in [location]\" patterns\r\n          queryText = queryText\r\n            .replace(/\\s+in\\s+([A-Za-z\\s]+)$/i, '')\r\n            .replace(/\\s+and my location is in\\s+([A-Za-z\\s]+)$/i, '')\r\n            .trim();\r\n          \r\n          // Always format with the expected pattern for API\r\n          const formattedQueryForAPI = `${queryText} and my location is in ${userLocationValue}`;\r\n          \r\n          console.log(\"Sending query with formatted location:\", formattedQueryForAPI);\r\n          \r\n          // Start the process and get initial synthesis and questions\r\n          const response = await processQuery(category, formattedQueryForAPI);\r\n          \r\n          // Rest of the processing logic...\r\n          if (response.data.status === 'questions') {\r\n            setProcessId(response.data.processId);\r\n            setSynthesis(response.data.synthesis);\r\n            \r\n            // Extract questions - ensure it's always an array\r\n            let questions = [];\r\n            \r\n            if (Array.isArray(response.data.questions)) {\r\n              questions = [...response.data.questions];\r\n            } else if (typeof response.data.questions === 'string') {\r\n              try {\r\n                const parsed = JSON.parse(response.data.questions);\r\n                if (Array.isArray(parsed)) {\r\n                  questions = parsed;\r\n                } else {\r\n                  questions = [response.data.questions];\r\n                }\r\n              } catch (e) {\r\n                questions = [response.data.questions];\r\n              }\r\n            } else if (response.data.questions && typeof response.data.questions === 'object') {\r\n              questions = Object.values(response.data.questions);\r\n            }\r\n            \r\n            // Create a separate copy of the array to avoid reference issues\r\n            const questionsCopy = [...questions];\r\n            \r\n            setFollowUpQuestions(questionsCopy);\r\n            setCurrentStep('questions');\r\n            setLoading(false);\r\n          } else {\r\n            setError('Unexpected response format');\r\n            setLoading(false);\r\n          }\r\n        } else {\r\n          // Handle case where location is not available\r\n          console.log(\"Sending query without location:\", queryText);\r\n          \r\n          const response = await processQuery(category, queryText);\r\n          \r\n          // Handle response same as above\r\n          if (response.data.status === 'questions') {\r\n            setProcessId(response.data.processId);\r\n            setSynthesis(response.data.synthesis);\r\n            \r\n            let questions = [];\r\n            \r\n            if (Array.isArray(response.data.questions)) {\r\n              questions = [...response.data.questions];\r\n            } else if (typeof response.data.questions === 'string') {\r\n              try {\r\n                const parsed = JSON.parse(response.data.questions);\r\n                if (Array.isArray(parsed)) {\r\n                  questions = parsed;\r\n                } else {\r\n                  questions = [response.data.questions];\r\n                }\r\n              } catch (e) {\r\n                questions = [response.data.questions];\r\n              }\r\n            } else if (response.data.questions && typeof response.data.questions === 'object') {\r\n              questions = Object.values(response.data.questions);\r\n            }\r\n            \r\n            const questionsCopy = [...questions];\r\n            \r\n            setFollowUpQuestions(questionsCopy);\r\n            setCurrentStep('questions');\r\n            setLoading(false);\r\n          } else {\r\n            setError('Unexpected response format');\r\n            setLoading(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error processing query:', err);\r\n        setError('Failed to process your query: ' + (err.message || 'Unknown error'));\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (category && query) {\r\n      processUserQuery();\r\n    } else {\r\n      setError('Missing required information. Please go back and try again.');\r\n      setLoading(false);\r\n    }\r\n  }, [category, query, userLocation, location]);\r\n  \r\n  const handleAnswerChange = (question, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [question]: answer\r\n    });\r\n  };\r\n  \r\n  const handleSubmitAnswers = async () => {\r\n    if (!processId) {\r\n      setError('No active process found');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const response = await submitAnswers(processId, answers);\r\n      \r\n      if (response.data.status === 'results') {\r\n        setProfessionals(response.data.professionals);\r\n        setCurrentStep('results');\r\n        setLoading(false);\r\n      } else {\r\n        setError('Unexpected response format');\r\n        setLoading(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting answers:', err);\r\n      setError('Failed to process answers: ' + (err.message || 'Unknown error'));\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleViewResults = () => {\r\n    // Get the stored location if it wasn't provided in state\r\n    let userLocationValue = userLocation;\r\n    if (!userLocationValue) {\r\n      userLocationValue = localStorage.getItem('userLocation');\r\n    }\r\n    \r\n    // Make sure to include location in the state when navigating to results\r\n    // Pass the original query without the appended location string\r\n    navigate('/results', { \r\n      state: { \r\n        professionals, \r\n        category, \r\n        query: originalQuery, // Use the original query for display \r\n        synthesis, \r\n        followUpQA: answers, \r\n        userLocation: userLocationValue \r\n      } \r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"query-processing-page\">\r\n      <Header />\r\n      \r\n      <main className=\"processing-container\">\r\n        {error ? (\r\n          <div className=\"error-container\">\r\n            <h2>Error</h2>\r\n            <p>{error}</p>\r\n            <button onClick={() => navigate('/dashboard')}>\r\n              Back to Dashboard\r\n            </button>\r\n          </div>\r\n        ) : currentStep === 'loading' ? (\r\n          <Loading message=\"Analyzing your query...\" />\r\n        ) : currentStep === 'questions' ? (\r\n          <div className=\"questions-section\">\r\n            <h2 className=\"fade-in\">Project Analysis</h2>\r\n            <div className=\"synthesis-box slide-in\">\r\n              <h3>Our Understanding</h3>\r\n              <p>{synthesis}</p>\r\n            </div>\r\n            \r\n            <div className=\"query-display slide-in\">\r\n              <p><strong>Your Query:</strong> {originalQuery}</p>\r\n              {userLocation && <p><strong>Location:</strong> {userLocation}</p>}\r\n            </div>\r\n            \r\n            <h3 className=\"fade-in-delayed\">We need a few more details</h3>\r\n            \r\n            {followUpQuestions.length > 0 ? (\r\n              <div className=\"questions-container\">\r\n                {followUpQuestions.map((question, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className={`question-box slide-in-question question-${index}`}\r\n                    style={{animationDelay: `${index * 0.1}s`}}\r\n                  >\r\n                    <p className=\"question-text\">{question}</p>\r\n                    <textarea\r\n                      placeholder=\"Your answer...\"\r\n                      value={answers[question] || ''}\r\n                      onChange={(e) => handleAnswerChange(question, e.target.value)}\r\n                      rows={3}\r\n                    />\r\n                  </div>\r\n                ))}\r\n                \r\n                <button \r\n                  onClick={handleSubmitAnswers}\r\n                  disabled={Object.keys(answers).length < followUpQuestions.length || loading}\r\n                  className=\"submit-answers-button fade-in-delayed\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <span className=\"spinner\"></span>\r\n                      Processing...\r\n                    </>\r\n                  ) : 'Find Matching Professionals'}\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"no-questions\">\r\n                <p>No questions available. Please try again.</p>\r\n                <button onClick={() => navigate('/dashboard')}>Back to Dashboard</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : currentStep === 'results' ? (\r\n          <div className=\"results-found pulse-animation\">\r\n            <h2>Matching Professionals Found!</h2>\r\n            <p>We've identified the best professionals for your needs.</p>\r\n            <button onClick={handleViewResults} className=\"view-results-button\">\r\n              View Recommended Professionals\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </main>\r\n      \r\n      <Footer />\r\n      \r\n      {(currentStep === 'loading' || loading) && <Loading message=\"Processing...\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryProcessing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}