{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zorai\\\\OneDrive\\\\Desktop\\\\skill-seeker\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { QueryContext } from '../../contexts/QueryContext';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport ProfessionalCard from './ProfessionalCard';\nimport ProfessionalDetail from './ProfessionalDetail';\nimport './DashboardStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    currentQuery,\n    setCurrentQuery\n  } = useContext(QueryContext);\n  const [professionals, setProfessionals] = useState([]);\n  const [selectedProfessional, setSelectedProfessional] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('text'); // 'text' or 'chart'\n  const [question, setQuestion] = useState('');\n  const [questionHistory, setQuestionHistory] = useState([]);\n  useEffect(() => {\n    // Fetch professionals from the backend\n    const fetchProfessionals = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        // If there's no current query, try to get the user's last saved preference\n        let endpoint = '/api/professionals';\n        if (currentQuery) {\n          endpoint = `/api/professionals/search?query=${encodeURIComponent(currentQuery)}`;\n        } else {\n          endpoint = '/api/user/preferences/latest';\n        }\n        const response = await fetch(endpoint, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch professionals');\n        }\n        const data = await response.json();\n        setProfessionals(data.professionals || []);\n\n        // Auto-select the first professional if available\n        if (data.professionals && data.professionals.length > 0) {\n          setSelectedProfessional(data.professionals[0]);\n        }\n      } catch (err) {\n        console.error('Error fetching professionals:', err);\n        setError('Failed to load professionals. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProfessionals();\n  }, [currentQuery]);\n  const handleProfessionalSelect = professional => {\n    setSelectedProfessional(professional);\n  };\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'text' ? 'chart' : 'text');\n  };\n  const handleSavePreference = async () => {\n    try {\n      const response = await fetch('/api/user/preferences/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          query: currentQuery,\n          professionals: professionals\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save preference');\n      }\n\n      // Success notification\n      alert('Your preference has been saved successfully!');\n    } catch (err) {\n      console.error('Error saving preference:', err);\n      alert('Failed to save preference. Please try again.');\n    }\n  };\n  const handleQuestionSubmit = async () => {\n    if (!question.trim()) return;\n\n    // Add question to history\n    const newQuestion = {\n      id: Date.now(),\n      text: question,\n      isProcessing: true,\n      response: null\n    };\n    setQuestionHistory([...questionHistory, newQuestion]);\n    try {\n      // Call API to get response\n      const response = await fetch('/api/question', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          question: question,\n          professionalId: (selectedProfessional === null || selectedProfessional === void 0 ? void 0 : selectedProfessional.ID) || null\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      const data = await response.json();\n\n      // Update question in history with response\n      setQuestionHistory(prev => prev.map(q => q.id === newQuestion.id ? {\n        ...q,\n        isProcessing: false,\n        response: data.response\n      } : q));\n    } catch (err) {\n      console.error('Error getting response:', err);\n\n      // Update question in history with error\n      setQuestionHistory(prev => prev.map(q => q.id === newQuestion.id ? {\n        ...q,\n        isProcessing: false,\n        response: \"Sorry, there was an error processing your question. Please try again.\",\n        hasError: true\n      } : q));\n    }\n\n    // Clear input\n    setQuestion('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.Name) || 'User']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"action-button save-button\",\n          onClick: handleSavePreference,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: \"Save Preference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"action-button view-button\",\n          onClick: toggleViewMode,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: viewMode === 'text' ? 'Chart View' : 'Text View'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"professionals-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Professionals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading professionals...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.reload(),\n            className: \"retry-button\",\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this) : professionals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No professionals found. Try a different query.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"professionals-list\",\n          children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: professionals.map((professional, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 20\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              exit: {\n                opacity: 0,\n                y: -20\n              },\n              transition: {\n                duration: 0.3,\n                delay: index * 0.1\n              },\n              children: /*#__PURE__*/_jsxDEV(ProfessionalCard, {\n                professional: professional,\n                isSelected: selectedProfessional && selectedProfessional.ID === professional.ID,\n                onSelect: () => handleProfessionalSelect(professional)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, professional.ID || index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"professional-detail-area\",\n        children: selectedProfessional ? /*#__PURE__*/_jsxDEV(ProfessionalDetail, {\n          professional: selectedProfessional,\n          viewMode: viewMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-detail-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select a professional to view details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Browse the list of recommended professionals on the left.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"questions-title\",\n            children: \"Ask Additional Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions-history\",\n            children: questionHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"question-label\",\n                  children: \"You asked:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-response\",\n                children: item.isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"processing-indicator\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dot-pulse\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `response-content ${item.hasError ? 'has-error' : ''}`,\n                  children: item.response\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-input-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: question,\n              onChange: e => setQuestion(e.target.value),\n              placeholder: \"Ask a question about the project or professional...\",\n              className: \"question-input\",\n              onKeyDown: e => {\n                if (e.key === 'Enter' && e.ctrlKey) {\n                  handleQuestionSubmit();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"send-button\",\n                onClick: handleQuestionSubmit,\n                disabled: !question.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-help\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Press Ctrl+Enter to send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"AYVxPucCBbsKn+YSllfP+4moW2U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","motion","AnimatePresence","QueryContext","AuthContext","ProfessionalCard","ProfessionalDetail","jsxDEV","_jsxDEV","Dashboard","_s","user","currentQuery","setCurrentQuery","professionals","setProfessionals","selectedProfessional","setSelectedProfessional","isLoading","setIsLoading","error","setError","viewMode","setViewMode","question","setQuestion","questionHistory","setQuestionHistory","fetchProfessionals","endpoint","encodeURIComponent","response","fetch","headers","localStorage","getItem","ok","Error","data","json","length","err","console","handleProfessionalSelect","professional","toggleViewMode","handleSavePreference","method","body","JSON","stringify","query","alert","handleQuestionSubmit","trim","newQuestion","id","Date","now","text","isProcessing","professionalId","ID","prev","map","q","hasError","className","children","Name","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","whileHover","scale","whileTap","window","location","reload","index","div","initial","opacity","y","animate","exit","transition","duration","delay","isSelected","onSelect","item","value","onChange","e","target","placeholder","onKeyDown","key","ctrlKey","disabled","_c","$RefreshReg$"],"sources":["C:/Users/zorai/OneDrive/Desktop/skill-seeker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { QueryContext } from '../../contexts/QueryContext';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport ProfessionalCard from './ProfessionalCard';\r\nimport ProfessionalDetail from './ProfessionalDetail';\r\nimport './DashboardStyles.css';\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { currentQuery, setCurrentQuery } = useContext(QueryContext);\r\n  const [professionals, setProfessionals] = useState([]);\r\n  const [selectedProfessional, setSelectedProfessional] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [viewMode, setViewMode] = useState('text'); // 'text' or 'chart'\r\n  const [question, setQuestion] = useState('');\r\n  const [questionHistory, setQuestionHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch professionals from the backend\r\n    const fetchProfessionals = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        \r\n        // If there's no current query, try to get the user's last saved preference\r\n        let endpoint = '/api/professionals';\r\n        if (currentQuery) {\r\n          endpoint = `/api/professionals/search?query=${encodeURIComponent(currentQuery)}`;\r\n        } else {\r\n          endpoint = '/api/user/preferences/latest';\r\n        }\r\n        \r\n        const response = await fetch(endpoint, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch professionals');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setProfessionals(data.professionals || []);\r\n        \r\n        // Auto-select the first professional if available\r\n        if (data.professionals && data.professionals.length > 0) {\r\n          setSelectedProfessional(data.professionals[0]);\r\n        }\r\n        \r\n      } catch (err) {\r\n        console.error('Error fetching professionals:', err);\r\n        setError('Failed to load professionals. Please try again later.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchProfessionals();\r\n  }, [currentQuery]);\r\n\r\n  const handleProfessionalSelect = (professional) => {\r\n    setSelectedProfessional(professional);\r\n  };\r\n\r\n  const toggleViewMode = () => {\r\n    setViewMode(viewMode === 'text' ? 'chart' : 'text');\r\n  };\r\n\r\n  const handleSavePreference = async () => {\r\n    try {\r\n      const response = await fetch('/api/user/preferences/save', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({\r\n          query: currentQuery,\r\n          professionals: professionals\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to save preference');\r\n      }\r\n      \r\n      // Success notification\r\n      alert('Your preference has been saved successfully!');\r\n      \r\n    } catch (err) {\r\n      console.error('Error saving preference:', err);\r\n      alert('Failed to save preference. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleQuestionSubmit = async () => {\r\n    if (!question.trim()) return;\r\n    \r\n    // Add question to history\r\n    const newQuestion = {\r\n      id: Date.now(),\r\n      text: question,\r\n      isProcessing: true,\r\n      response: null\r\n    };\r\n    \r\n    setQuestionHistory([...questionHistory, newQuestion]);\r\n    \r\n    try {\r\n      // Call API to get response\r\n      const response = await fetch('/api/question', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({\r\n          question: question,\r\n          professionalId: selectedProfessional?.ID || null\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to get response');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Update question in history with response\r\n      setQuestionHistory(prev => \r\n        prev.map(q => \r\n          q.id === newQuestion.id \r\n            ? { ...q, isProcessing: false, response: data.response } \r\n            : q\r\n        )\r\n      );\r\n      \r\n    } catch (err) {\r\n      console.error('Error getting response:', err);\r\n      \r\n      // Update question in history with error\r\n      setQuestionHistory(prev => \r\n        prev.map(q => \r\n          q.id === newQuestion.id \r\n            ? { \r\n                ...q, \r\n                isProcessing: false, \r\n                response: \"Sorry, there was an error processing your question. Please try again.\",\r\n                hasError: true\r\n              } \r\n            : q\r\n        )\r\n      );\r\n    }\r\n    \r\n    // Clear input\r\n    setQuestion('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-header\">\r\n        <h1>Welcome, {user?.Name || 'User'}</h1>\r\n        \r\n        <div className=\"dashboard-actions\">\r\n          <motion.button \r\n            className=\"action-button save-button\"\r\n            onClick={handleSavePreference}\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            Save Preference\r\n          </motion.button>\r\n          \r\n          <motion.button \r\n            className=\"action-button view-button\"\r\n            onClick={toggleViewMode}\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            {viewMode === 'text' ? 'Chart View' : 'Text View'}\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-content\">\r\n        {/* Left Sidebar - Professional List */}\r\n        <aside className=\"professionals-sidebar\">\r\n          <h2>Recommended Professionals</h2>\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading-spinner-container\">\r\n              <div className=\"loading-spinner\"></div>\r\n              <p>Loading professionals...</p>\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"error-message\">\r\n              <p>{error}</p>\r\n              <button \r\n                onClick={() => window.location.reload()}\r\n                className=\"retry-button\"\r\n              >\r\n                Retry\r\n              </button>\r\n            </div>\r\n          ) : professionals.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <p>No professionals found. Try a different query.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"professionals-list\">\r\n              <AnimatePresence>\r\n                {professionals.map((professional, index) => (\r\n                  <motion.div\r\n                    key={professional.ID || index}\r\n                    initial={{ opacity: 0, y: 20 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    exit={{ opacity: 0, y: -20 }}\r\n                    transition={{ duration: 0.3, delay: index * 0.1 }}\r\n                  >\r\n                    <ProfessionalCard\r\n                      professional={professional}\r\n                      isSelected={selectedProfessional && selectedProfessional.ID === professional.ID}\r\n                      onSelect={() => handleProfessionalSelect(professional)}\r\n                    />\r\n                  </motion.div>\r\n                ))}\r\n              </AnimatePresence>\r\n            </div>\r\n          )}\r\n        </aside>\r\n        \r\n        {/* Middle - Professional Details */}\r\n        <main className=\"professional-detail-area\">\r\n          {selectedProfessional ? (\r\n            <ProfessionalDetail \r\n              professional={selectedProfessional} \r\n              viewMode={viewMode}\r\n            />\r\n          ) : (\r\n            <div className=\"empty-detail-state\">\r\n              <h3>Select a professional to view details</h3>\r\n              <p>Browse the list of recommended professionals on the left.</p>\r\n            </div>\r\n          )}\r\n        </main>\r\n        \r\n        {/* Right Sidebar - Ask Additional Questions */}\r\n        <div className=\"questions-sidebar\">\r\n          <div className=\"questions-panel\">\r\n            <h2 className=\"questions-title\">Ask Additional Questions</h2>\r\n            \r\n            <div className=\"questions-history\">\r\n              {questionHistory.map(item => (\r\n                <div key={item.id} className=\"question-item\">\r\n                  <div className=\"question-text\">\r\n                    <p className=\"question-label\">You asked:</p>\r\n                    <p>{item.text}</p>\r\n                  </div>\r\n                  \r\n                  <div className=\"question-response\">\r\n                    {item.isProcessing ? (\r\n                      <div className=\"processing-indicator\">\r\n                        <div className=\"dot-pulse\"></div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className={`response-content ${item.hasError ? 'has-error' : ''}`}>\r\n                        {item.response}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"question-input-area\">\r\n              <textarea\r\n                value={question}\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                placeholder=\"Ask a question about the project or professional...\"\r\n                className=\"question-input\"\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter' && e.ctrlKey) {\r\n                    handleQuestionSubmit();\r\n                  }\r\n                }}\r\n              />\r\n              <div className=\"input-actions\">\r\n                <button \r\n                  className=\"send-button\"\r\n                  onClick={handleQuestionSubmit}\r\n                  disabled={!question.trim()}\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n              <div className=\"input-help\">\r\n                <p>Press Ctrl+Enter to send</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}